local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()


local Window = Rayfield:CreateWindow({
   Name = "Adam's Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Loading Adam's Hub",
   LoadingSubtitle = "Created By Adam.",
   Theme = "Default", --

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Adam's hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = True, -- Set this to true to use our key system
   KeySettings = {
      Title = "ADAM'S HUB KEY",
      Subtitle = "Key System",
      Note = "You may only get the key by getting access to the secret discord server.", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Administrator"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("TEST", 4483362458) -- Title, Image

        autoFishingEnabled = false
        print("Auto Fishing Disabled")
    end
end

-- Define the auto sell function
local function autoSell()
    -- While the toggle is enabled, keep selling
    while autoSellEnabled do
        -- Perform the sell action
        local marcMerchant = workspace.world.npcs:FindFirstChild("Marc Merchant")
        if marcMerchant then
            local sellall = marcMerchant.merchant.sellall
            if sellall then
                -- Invoke the sell all method on the merchant
                sellall:InvokeServer()
            end
        end
        
        -- Wait for a short period before repeating
        wait(0)
    end
end

-- Trigger auto selling when the toggle is enabled
autoSellToggle.Callback = function(value)
    if value then
        -- Start auto selling when the toggle is enabled
        autoSellEnabled = true
        spawn(function()  -- Run auto sell in a separate thread
            autoSell()
        end)
    else
        -- Stop auto selling immediately when the toggle is disabled
        autoSellEnabled = false
        print("Auto Sell Disabled")
    end
end

Rayfield:LoadConfiguration()

